#!/bin/bash
#
# remove-temps   - Busca recursivamente em um diretório por arquivos
#                  temporários e os elimina.
#
# ------------------------------------------------------------------------------
#
# The MIT License
#
# Copyright (c) 2010 Hugo Henriques Maia Vieira

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# ------------------------------------------------------------------------------
#
#
# Histórico:
#
# v1.0, 20-10-2009, Hugo Maia:
# - Versão inicial
# v1.1, 20-10-2009, Hugo Maia:
# - Adicionadas as opções -g e --git
#
# ------------------------------------------------------------------------------
#
# TODO: Fazer parâmetros serem passados diretamente, sem -"alguma coisa"

#========================== Variáveis e chaves =================================

MENSAGEM_USO="
$(basename "$0") - Busca recursivamente em um diretório por arquivos
                  temporários e os elimina.


USO: "$0" PARÂMETROS [OPÇÕES]


PARÂMETROS:
-f, --file Diretório a partir do qual a busca será feita recursivamente.


OPÇÕES:
-q, --quiet Executa em modo silencioso, não imprimindo na tela os arquivos
            que foram removidos.

-g, --git   Executa o comando \"git rm\" para todos os arquivos temporários.
            Para utilizar esta opção, deve-se estar na diretório root do
            projeto e os arquivos ainda devem existir.

-h, --help Mostra esta tela de ajuda e sai
-v, --version Mostra a versão do programa e sai


EXEMPLOS:

1)
$ ls ~/sgtran/app/models
usuario.rb usuario.rb~ usuario_session.rb usuario_session.rb~

$ "$0" -f ~/sgtran/app/models

$ ls ~/sgtran/app/models
usuario.rb usuario_session.rb

2)
$ git status
# On branch master
nothing to commit (working directory clean)

$ "$0" -f . -g

$ git status
# On branch master
# Changes to be committed:
#   (use \"git reset HEAD <file>...\" to unstage)
#
#	deleted:    app/controllers/application_controller.rb~
#	deleted:    app/controllers/usuario_sessions_controller.rb~
#


AUTOR:

    Hugo Henriques Maia Vieira <hugomaiavieira@gmail.com>
"

MENSAGEM_ERRO="
USO: "$0" PARÂMETROS [OPÇÕES]
Utilize a opção --help para mais informações.
"
f=0
git=0
quiet=0
frase_git=""

#================= Tratamento de opções de linha de comando ====================

while test -n "$1"
do
case "$1" in

    -f | --file)
      shift

      diretorio="$1"
      f=1

      if test -z "$diretorio"
      then
        echo "Faltou argumento para -f."
        exit 1
      fi

    if ! test -e "$diretorio"
      then
        echo "O diretório atribuído ao parâmetro -f não existe."
        exit 1
      fi
    ;;

    -v | --version)
      echo -n $(basename "$0" .sh) "- "
      #Extrai a versão diretamente do cabeçalho do programa
      grep '^# v' "$0" | tail -1 | cut -d , -f 1 | tr -d \# | tr -d [:blank:]
      exit 0
    ;;

      -g | --git) git=1 ;;

    -q | --quiet) quiet=1 ;;

     -h | --help) echo "$MENSAGEM_USO"; exit 0 ;;

               *) echo "$MENSAGEM_ERRO"; exit 1 ;;
  esac
shift
done

if ( test "$f" = 0 )
then
echo "$MENSAGEM_ERRO"
  exit 1
fi

#============================ Processamento ====================================

find $diretorio -name *~ > /tmp/temps

W=0
for i in $(cat /tmp/temps)
do
    rm $i
    W=$((W+1))
    if [ "$git" = 1 ]
    then
        git rm $i 1>& /dev/null
        if [ $? = 1 ]
        then
            git=0
            frase_git="Não foram removidos arquivos do git."
        fi
    fi
    test "$quiet" = 0 && echo $i
done

if [ "$git" = 1 ] & [ "$W" -ne 0 ]
then
    frase_git="Também foram removidos do git."
else
    frase_git="Não foram removidos arquivos do git."
fi

echo "Foram removidos $W arquivos temporários. $frase_git"

